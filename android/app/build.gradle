plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.pelevo_podcast.app"
     compileSdk = 35
     ndkVersion = "29.0.14033849"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = 17
        freeCompilerArgs += [
            '-Xskip-metadata-version-check',
            '-Xallow-unstable-dependencies',
            '-Xskip-prerelease-check'
        ]
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.Podemeraldltd.pelevo"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 24
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled true
        
        // Add 16KB page size support
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }
    }

     signingConfigs {
        if (keystorePropertiesFile.exists()) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                def storeFilePath = keystoreProperties['storeFile']
                if (storeFilePath != null) {
                    storeFile file(storeFilePath)
                }
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }            
           
        }
    }
    
    // Add packaging options for 16KB page compatibility
    packagingOptions {
        jniLibs {
            useLegacyPackaging = false
        }
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }
    
}

flutter {
    source '../..'
}

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    
    // Google Play Billing Library 8.0.0+
    implementation 'com.android.billingclient:billing:8.0.0'
    
    // AndroidX Core Dependencies - Updated for 16KB page compatibility
    implementation 'androidx.annotation:annotation:1.7.1'
    implementation 'androidx.core:core:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.media:media:1.7.0'
    implementation 'androidx.media3:media3-common:1.3.1'
    implementation 'androidx.media3:media3-session:1.3.1'
    
    // Google Play Services with AndroidX support
    implementation 'com.google.android.gms:play-services-cast:21.5.0'
    implementation 'com.google.android.gms:play-services-cast-framework:21.5.0'
    
    // Additional AndroidX dependencies for better compatibility
    implementation 'androidx.lifecycle:lifecycle-runtime:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-common:2.7.0'
    implementation 'androidx.fragment:fragment:1.6.2'
    
    // Add explicit support for 16KB pages
    implementation 'androidx.startup:startup-runtime:1.1.1'
}